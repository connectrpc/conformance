run:
  skip-dirs-use-default: false
linters-settings:
  errcheck:
    check-type-assertions: true
  exhaustruct:
    include:
      # No zero values for param structs.
      - 'github\.com/connectrpc/conformance\..*[pP]arams'
  forbidigo:
    forbid:
      - '^fmt\.Print'
      - '^print$'
      - '^println$'
      - '^panic$'
  godox:
    # TODO, OPT, etc. comments are fine to commit. Use FIXME comments for
    # temporary hacks, and use godox to prevent committing them.
    keywords: [FIXME]
  varnamelen:
      ignore-decls:
      - i int
      - t *console.TB
      - t conformancetesting.TB
      - t testing.TB
      - ok bool
linters:
  enable-all: true
  disable:
    - cyclop            # covered by gocyclo
    - deadcode          # abandoned
    - exhaustivestruct  # replaced by exhaustruct
    - funlen            # rely on code review to limit function length
    - gocognit          # dubious "cognitive overhead" quantification
    - gofumpt           # prefer standard gofmt
    - goimports         # rely on gci instead
    - golint            # deprecated by Go team
    - gomnd             # some unnamed constants are okay
    - ifshort           # deprecated by author
    - interfacer        # deprecated by author
    - ireturn           # "accept interfaces, return structs" isn't ironclad
    - lll               # don't want hard limits for line length
    - maintidx          # covered by gocyclo
    - maligned          # readability trumps efficient struct packing
    - nlreturn          # generous whitespace violates house style
    - nosnakecase       # deprecated in https://github.com/golangci/golangci-lint/pull/3065
    - scopelint         # deprecated by author
    - structcheck       # abandoned
    - testpackage       # internal tests are fine
    - varcheck          # abandoned
    - wrapcheck         # don't _always_ need to wrap errors
    - wsl               # generous whitespace violates house style
issues:
  exclude:
    # Don't ban use of fmt.Errorf to create new errors, but the remaining
    # checks from err113 are useful.
    - "err113: do not define dynamic errors.*"
  exclude-rules:
    # We need to init some globals to use in tests.
    - linters: [gochecknoglobals]
      path: internal/interopgrpc/test_cases.go
    # We need to init some globals to use in tests.
    - linters: [gochecknoglobals]
      path: internal/interopconnect/test_cases.go
    # This is a false positive as the fatal will not occur together with an `gconn`.
    - linters: [gocritic]
      path: cmd/client/main.go
      text: "exitAfterDefer: log.Fatalf will exit"
    # We force the test server to exit if there is an error when shutting down the server.
    - linters: [gocritic]
      path: cmd/serverconnect/main.go
      text: "exitAfterDefer: log.Fatalln will exit"
    # We can skip this check as the server is for test purpose only.
    - linters: [gosec]
      path: cmd/serverconnect/main.go
      text: "G112: Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server"
