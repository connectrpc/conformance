// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/testing/test.proto

#include "grpc/testing/test.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace grpc {
namespace testing {
}  // namespace testing
}  // namespace grpc
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_grpc_2ftesting_2ftest_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_grpc_2ftesting_2ftest_2eproto = nullptr;
const ::uint32_t TableStruct_grpc_2ftesting_2ftest_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_grpc_2ftesting_2ftest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\027grpc/testing/test.proto\022\014grpc.testing\032"
    "\030grpc/testing/empty.proto\032\033grpc/testing/"
    "messages.proto2\336\007\n\013TestService\0225\n\tEmptyC"
    "all\022\023.grpc.testing.Empty\032\023.grpc.testing."
    "Empty\022F\n\tUnaryCall\022\033.grpc.testing.Simple"
    "Request\032\034.grpc.testing.SimpleResponse\022J\n"
    "\rFailUnaryCall\022\033.grpc.testing.SimpleRequ"
    "est\032\034.grpc.testing.SimpleResponse\022T\n\022Cac"
    "heableUnaryCall\022\033.grpc.testing.SimpleReq"
    "uest\032\034.grpc.testing.SimpleResponse\"\003\220\002\001\022"
    "l\n\023StreamingOutputCall\022(.grpc.testing.St"
    "reamingOutputCallRequest\032).grpc.testing."
    "StreamingOutputCallResponse0\001\022p\n\027FailStr"
    "eamingOutputCall\022(.grpc.testing.Streamin"
    "gOutputCallRequest\032).grpc.testing.Stream"
    "ingOutputCallResponse0\001\022i\n\022StreamingInpu"
    "tCall\022\'.grpc.testing.StreamingInputCallR"
    "equest\032(.grpc.testing.StreamingInputCall"
    "Response(\001\022i\n\016FullDuplexCall\022(.grpc.test"
    "ing.StreamingOutputCallRequest\032).grpc.te"
    "sting.StreamingOutputCallResponse(\0010\001\022i\n"
    "\016HalfDuplexCall\022(.grpc.testing.Streaming"
    "OutputCallRequest\032).grpc.testing.Streami"
    "ngOutputCallResponse(\0010\001\022=\n\021Unimplemente"
    "dCall\022\023.grpc.testing.Empty\032\023.grpc.testin"
    "g.Empty\022N\n UnimplementedStreamingOutputC"
    "all\022\023.grpc.testing.Empty\032\023.grpc.testing."
    "Empty0\0012\245\001\n\024UnimplementedService\022=\n\021Unim"
    "plementedCall\022\023.grpc.testing.Empty\032\023.grp"
    "c.testing.Empty\022N\n UnimplementedStreamin"
    "gOutputCall\022\023.grpc.testing.Empty\032\023.grpc."
    "testing.Empty0\0012\211\001\n\020ReconnectService\022;\n\005"
    "Start\022\035.grpc.testing.ReconnectParams\032\023.g"
    "rpc.testing.Empty\0228\n\004Stop\022\023.grpc.testing"
    ".Empty\032\033.grpc.testing.ReconnectInfo2\206\002\n\030"
    "LoadBalancerStatsService\022c\n\016GetClientSta"
    "ts\022&.grpc.testing.LoadBalancerStatsReque"
    "st\032\'.grpc.testing.LoadBalancerStatsRespo"
    "nse\"\000\022\204\001\n\031GetClientAccumulatedStats\0221.gr"
    "pc.testing.LoadBalancerAccumulatedStatsR"
    "equest\0322.grpc.testing.LoadBalancerAccumu"
    "latedStatsResponse\"\0002\213\001\n\026XdsUpdateHealth"
    "Service\0226\n\nSetServing\022\023.grpc.testing.Emp"
    "ty\032\023.grpc.testing.Empty\0229\n\rSetNotServing"
    "\022\023.grpc.testing.Empty\032\023.grpc.testing.Emp"
    "ty2{\n\037XdsUpdateClientConfigureService\022X\n"
    "\tConfigure\022$.grpc.testing.ClientConfigur"
    "eRequest\032%.grpc.testing.ClientConfigureR"
    "esponseB\270\001\n\020com.grpc.testingB\tTestProtoP"
    "\001ZHgithub.com/bufbuild/connect-crosstest"
    "/internal/gen/proto/go/grpc/testing\242\002\003GT"
    "X\252\002\014Grpc.Testing\312\002\014Grpc\\Testing\342\002\030Grpc\\T"
    "esting\\GPBMetadata\352\002\rGrpc::Testingb\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_grpc_2ftesting_2ftest_2eproto_deps[2] =
    {
        &::descriptor_table_grpc_2ftesting_2fempty_2eproto,
        &::descriptor_table_grpc_2ftesting_2fmessages_2eproto,
};
static ::absl::once_flag descriptor_table_grpc_2ftesting_2ftest_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpc_2ftesting_2ftest_2eproto = {
    false,
    false,
    2122,
    descriptor_table_protodef_grpc_2ftesting_2ftest_2eproto,
    "grpc/testing/test.proto",
    &descriptor_table_grpc_2ftesting_2ftest_2eproto_once,
    descriptor_table_grpc_2ftesting_2ftest_2eproto_deps,
    2,
    0,
    schemas,
    file_default_instances,
    TableStruct_grpc_2ftesting_2ftest_2eproto::offsets,
    nullptr,
    file_level_enum_descriptors_grpc_2ftesting_2ftest_2eproto,
    file_level_service_descriptors_grpc_2ftesting_2ftest_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpc_2ftesting_2ftest_2eproto_getter() {
  return &descriptor_table_grpc_2ftesting_2ftest_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpc_2ftesting_2ftest_2eproto(&descriptor_table_grpc_2ftesting_2ftest_2eproto);
namespace grpc {
namespace testing {
// @@protoc_insertion_point(namespace_scope)
}  // namespace testing
}  // namespace grpc
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
