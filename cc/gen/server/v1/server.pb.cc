// Copyright 2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server/v1/server.proto

#include "server/v1/server.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace server {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR ServerMetadata::ServerMetadata(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.protocols_)*/ {},
      /*decltype(_impl_.host_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ServerMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerMetadataDefaultTypeInternal() {}
  union {
    ServerMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerMetadataDefaultTypeInternal _ServerMetadata_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ProtocolSupport::ProtocolSupport(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.http_versions_)*/ {},
      /*decltype(_impl_.port_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.protocol_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ProtocolSupportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtocolSupportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtocolSupportDefaultTypeInternal() {}
  union {
    ProtocolSupport _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtocolSupportDefaultTypeInternal _ProtocolSupport_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR HTTPVersion::HTTPVersion(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.major_)*/ 0,
      /*decltype(_impl_.minor_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct HTTPVersionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HTTPVersionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HTTPVersionDefaultTypeInternal() {}
  union {
    HTTPVersion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HTTPVersionDefaultTypeInternal _HTTPVersion_default_instance_;
}  // namespace v1
}  // namespace server
static ::_pb::Metadata file_level_metadata_server_2fv1_2fserver_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_server_2fv1_2fserver_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_server_2fv1_2fserver_2eproto = nullptr;
const ::uint32_t TableStruct_server_2fv1_2fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::server::v1::ServerMetadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::server::v1::ServerMetadata, _impl_.host_),
    PROTOBUF_FIELD_OFFSET(::server::v1::ServerMetadata, _impl_.protocols_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::server::v1::ProtocolSupport, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::server::v1::ProtocolSupport, _impl_.protocol_),
    PROTOBUF_FIELD_OFFSET(::server::v1::ProtocolSupport, _impl_.http_versions_),
    PROTOBUF_FIELD_OFFSET(::server::v1::ProtocolSupport, _impl_.port_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::server::v1::HTTPVersion, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::server::v1::HTTPVersion, _impl_.major_),
    PROTOBUF_FIELD_OFFSET(::server::v1::HTTPVersion, _impl_.minor_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::server::v1::ServerMetadata)},
        {10, -1, -1, sizeof(::server::v1::ProtocolSupport)},
        {21, -1, -1, sizeof(::server::v1::HTTPVersion)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::server::v1::_ServerMetadata_default_instance_._instance,
    &::server::v1::_ProtocolSupport_default_instance_._instance,
    &::server::v1::_HTTPVersion_default_instance_._instance,
};
const char descriptor_table_protodef_server_2fv1_2fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026server/v1/server.proto\022\tserver.v1\"^\n\016S"
    "erverMetadata\022\022\n\004host\030\001 \001(\tR\004host\0228\n\tpro"
    "tocols\030\002 \003(\0132\032.server.v1.ProtocolSupport"
    "R\tprotocols\"\223\001\n\017ProtocolSupport\022/\n\010proto"
    "col\030\001 \001(\0162\023.server.v1.ProtocolR\010protocol"
    "\022;\n\rhttp_versions\030\002 \003(\0132\026.server.v1.HTTP"
    "VersionR\014httpVersions\022\022\n\004port\030\003 \001(\tR\004por"
    "t\"9\n\013HTTPVersion\022\024\n\005major\030\001 \001(\005R\005major\022\024"
    "\n\005minor\030\002 \001(\005R\005minor*N\n\010Protocol\022\030\n\024PROT"
    "OCOL_UNSPECIFIED\020\000\022\021\n\rPROTOCOL_GRPC\020\001\022\025\n"
    "\021PROTOCOL_GRPC_WEB\020\002B\246\001\n\rcom.server.v1B\013"
    "ServerProtoP\001ZCconnectrpc.com/conformanc"
    "e/internal/gen/proto/go/server/v1;server"
    "v1\242\002\003SXX\252\002\tServer.V1\312\002\tServer\\V1\342\002\025Serve"
    "r\\V1\\GPBMetadata\352\002\nServer::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_server_2fv1_2fserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_server_2fv1_2fserver_2eproto = {
    false,
    false,
    597,
    descriptor_table_protodef_server_2fv1_2fserver_2eproto,
    "server/v1/server.proto",
    &descriptor_table_server_2fv1_2fserver_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_server_2fv1_2fserver_2eproto::offsets,
    file_level_metadata_server_2fv1_2fserver_2eproto,
    file_level_enum_descriptors_server_2fv1_2fserver_2eproto,
    file_level_service_descriptors_server_2fv1_2fserver_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_server_2fv1_2fserver_2eproto_getter() {
  return &descriptor_table_server_2fv1_2fserver_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_server_2fv1_2fserver_2eproto(&descriptor_table_server_2fv1_2fserver_2eproto);
namespace server {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Protocol_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_server_2fv1_2fserver_2eproto);
  return file_level_enum_descriptors_server_2fv1_2fserver_2eproto[0];
}
bool Protocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class ServerMetadata::_Internal {
 public:
};

ServerMetadata::ServerMetadata(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:server.v1.ServerMetadata)
}
ServerMetadata::ServerMetadata(const ServerMetadata& from) : ::google::protobuf::Message() {
  ServerMetadata* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.protocols_){from._impl_.protocols_},
      decltype(_impl_.host_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host().empty()) {
    _this->_impl_.host_.Set(from._internal_host(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:server.v1.ServerMetadata)
}
inline void ServerMetadata::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.protocols_){arena},
      decltype(_impl_.host_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.host_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ServerMetadata::~ServerMetadata() {
  // @@protoc_insertion_point(destructor:server.v1.ServerMetadata)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerMetadata::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.protocols_.~RepeatedPtrField();
  _impl_.host_.Destroy();
}
void ServerMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ServerMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:server.v1.ServerMetadata)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_protocols()->Clear();
  _impl_.host_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerMetadata::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 37, 2> ServerMetadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServerMetadata_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .server.v1.ProtocolSupport protocols = 2 [json_name = "protocols"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServerMetadata, _impl_.protocols_)}},
    // string host = 1 [json_name = "host"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerMetadata, _impl_.host_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string host = 1 [json_name = "host"];
    {PROTOBUF_FIELD_OFFSET(ServerMetadata, _impl_.host_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .server.v1.ProtocolSupport protocols = 2 [json_name = "protocols"];
    {PROTOBUF_FIELD_OFFSET(ServerMetadata, _impl_.protocols_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::server::v1::ProtocolSupport>()},
  }}, {{
    "\30\4\0\0\0\0\0\0"
    "server.v1.ServerMetadata"
    "host"
  }},
};

::uint8_t* ServerMetadata::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:server.v1.ServerMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string host = 1 [json_name = "host"];
  if (!this->_internal_host().empty()) {
    const std::string& _s = this->_internal_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "server.v1.ServerMetadata.host");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .server.v1.ProtocolSupport protocols = 2 [json_name = "protocols"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_protocols_size()); i < n; i++) {
    const auto& repfield = this->_internal_protocols().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server.v1.ServerMetadata)
  return target;
}

::size_t ServerMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server.v1.ServerMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .server.v1.ProtocolSupport protocols = 2 [json_name = "protocols"];
  total_size += 1UL * this->_internal_protocols_size();
  for (const auto& msg : this->_internal_protocols()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string host = 1 [json_name = "host"];
  if (!this->_internal_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_host());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerMetadata::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ServerMetadata::MergeImpl
};
const ::google::protobuf::Message::ClassData*ServerMetadata::GetClassData() const { return &_class_data_; }


void ServerMetadata::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerMetadata*>(&to_msg);
  auto& from = static_cast<const ServerMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:server.v1.ServerMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_protocols()->MergeFrom(from._internal_protocols());
  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerMetadata::CopyFrom(const ServerMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server.v1.ServerMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerMetadata::IsInitialized() const {
  return true;
}

void ServerMetadata::InternalSwap(ServerMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.protocols_.InternalSwap(&other->_impl_.protocols_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, lhs_arena,
                                       &other->_impl_.host_, rhs_arena);
}

::google::protobuf::Metadata ServerMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_server_2fv1_2fserver_2eproto_getter, &descriptor_table_server_2fv1_2fserver_2eproto_once,
      file_level_metadata_server_2fv1_2fserver_2eproto[0]);
}
// ===================================================================

class ProtocolSupport::_Internal {
 public:
};

ProtocolSupport::ProtocolSupport(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:server.v1.ProtocolSupport)
}
ProtocolSupport::ProtocolSupport(const ProtocolSupport& from) : ::google::protobuf::Message() {
  ProtocolSupport* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.http_versions_){from._impl_.http_versions_},
      decltype(_impl_.port_){},
      decltype(_impl_.protocol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.port_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_port().empty()) {
    _this->_impl_.port_.Set(from._internal_port(), _this->GetArenaForAllocation());
  }
  _this->_impl_.protocol_ = from._impl_.protocol_;

  // @@protoc_insertion_point(copy_constructor:server.v1.ProtocolSupport)
}
inline void ProtocolSupport::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.http_versions_){arena},
      decltype(_impl_.port_){},
      decltype(_impl_.protocol_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.port_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ProtocolSupport::~ProtocolSupport() {
  // @@protoc_insertion_point(destructor:server.v1.ProtocolSupport)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProtocolSupport::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.http_versions_.~RepeatedPtrField();
  _impl_.port_.Destroy();
}
void ProtocolSupport::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ProtocolSupport::Clear() {
// @@protoc_insertion_point(message_clear_start:server.v1.ProtocolSupport)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_http_versions()->Clear();
  _impl_.port_.ClearToEmpty();
  _impl_.protocol_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProtocolSupport::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 38, 2> ProtocolSupport::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProtocolSupport_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .server.v1.Protocol protocol = 1 [json_name = "protocol"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProtocolSupport, _impl_.protocol_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ProtocolSupport, _impl_.protocol_)}},
    // repeated .server.v1.HTTPVersion http_versions = 2 [json_name = "httpVersions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ProtocolSupport, _impl_.http_versions_)}},
    // string port = 3 [json_name = "port"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ProtocolSupport, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .server.v1.Protocol protocol = 1 [json_name = "protocol"];
    {PROTOBUF_FIELD_OFFSET(ProtocolSupport, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .server.v1.HTTPVersion http_versions = 2 [json_name = "httpVersions"];
    {PROTOBUF_FIELD_OFFSET(ProtocolSupport, _impl_.http_versions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string port = 3 [json_name = "port"];
    {PROTOBUF_FIELD_OFFSET(ProtocolSupport, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::server::v1::HTTPVersion>()},
  }}, {{
    "\31\0\0\4\0\0\0\0"
    "server.v1.ProtocolSupport"
    "port"
  }},
};

::uint8_t* ProtocolSupport::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:server.v1.ProtocolSupport)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .server.v1.Protocol protocol = 1 [json_name = "protocol"];
  if (this->_internal_protocol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_protocol(), target);
  }

  // repeated .server.v1.HTTPVersion http_versions = 2 [json_name = "httpVersions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_http_versions_size()); i < n; i++) {
    const auto& repfield = this->_internal_http_versions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string port = 3 [json_name = "port"];
  if (!this->_internal_port().empty()) {
    const std::string& _s = this->_internal_port();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "server.v1.ProtocolSupport.port");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server.v1.ProtocolSupport)
  return target;
}

::size_t ProtocolSupport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server.v1.ProtocolSupport)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .server.v1.HTTPVersion http_versions = 2 [json_name = "httpVersions"];
  total_size += 1UL * this->_internal_http_versions_size();
  for (const auto& msg : this->_internal_http_versions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string port = 3 [json_name = "port"];
  if (!this->_internal_port().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_port());
  }

  // .server.v1.Protocol protocol = 1 [json_name = "protocol"];
  if (this->_internal_protocol() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_protocol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProtocolSupport::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ProtocolSupport::MergeImpl
};
const ::google::protobuf::Message::ClassData*ProtocolSupport::GetClassData() const { return &_class_data_; }


void ProtocolSupport::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProtocolSupport*>(&to_msg);
  auto& from = static_cast<const ProtocolSupport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:server.v1.ProtocolSupport)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_http_versions()->MergeFrom(from._internal_http_versions());
  if (!from._internal_port().empty()) {
    _this->_internal_set_port(from._internal_port());
  }
  if (from._internal_protocol() != 0) {
    _this->_internal_set_protocol(from._internal_protocol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtocolSupport::CopyFrom(const ProtocolSupport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server.v1.ProtocolSupport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProtocolSupport::IsInitialized() const {
  return true;
}

void ProtocolSupport::InternalSwap(ProtocolSupport* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.http_versions_.InternalSwap(&other->_impl_.http_versions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_, lhs_arena,
                                       &other->_impl_.port_, rhs_arena);
  swap(_impl_.protocol_, other->_impl_.protocol_);
}

::google::protobuf::Metadata ProtocolSupport::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_server_2fv1_2fserver_2eproto_getter, &descriptor_table_server_2fv1_2fserver_2eproto_once,
      file_level_metadata_server_2fv1_2fserver_2eproto[1]);
}
// ===================================================================

class HTTPVersion::_Internal {
 public:
};

HTTPVersion::HTTPVersion(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:server.v1.HTTPVersion)
}
HTTPVersion::HTTPVersion(const HTTPVersion& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:server.v1.HTTPVersion)
}
inline void HTTPVersion::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.major_){0},
      decltype(_impl_.minor_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
HTTPVersion::~HTTPVersion() {
  // @@protoc_insertion_point(destructor:server.v1.HTTPVersion)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HTTPVersion::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void HTTPVersion::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void HTTPVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:server.v1.HTTPVersion)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.major_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.minor_) -
      reinterpret_cast<char*>(&_impl_.major_)) + sizeof(_impl_.minor_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HTTPVersion::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> HTTPVersion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HTTPVersion_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 minor = 2 [json_name = "minor"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HTTPVersion, _impl_.minor_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HTTPVersion, _impl_.minor_)}},
    // int32 major = 1 [json_name = "major"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HTTPVersion, _impl_.major_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HTTPVersion, _impl_.major_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 major = 1 [json_name = "major"];
    {PROTOBUF_FIELD_OFFSET(HTTPVersion, _impl_.major_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 minor = 2 [json_name = "minor"];
    {PROTOBUF_FIELD_OFFSET(HTTPVersion, _impl_.minor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* HTTPVersion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:server.v1.HTTPVersion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 major = 1 [json_name = "major"];
  if (this->_internal_major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_major(), target);
  }

  // int32 minor = 2 [json_name = "minor"];
  if (this->_internal_minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_minor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server.v1.HTTPVersion)
  return target;
}

::size_t HTTPVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server.v1.HTTPVersion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 major = 1 [json_name = "major"];
  if (this->_internal_major() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_major());
  }

  // int32 minor = 2 [json_name = "minor"];
  if (this->_internal_minor() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_minor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HTTPVersion::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    HTTPVersion::MergeImpl
};
const ::google::protobuf::Message::ClassData*HTTPVersion::GetClassData() const { return &_class_data_; }


void HTTPVersion::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HTTPVersion*>(&to_msg);
  auto& from = static_cast<const HTTPVersion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:server.v1.HTTPVersion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_major() != 0) {
    _this->_internal_set_major(from._internal_major());
  }
  if (from._internal_minor() != 0) {
    _this->_internal_set_minor(from._internal_minor());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HTTPVersion::CopyFrom(const HTTPVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server.v1.HTTPVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HTTPVersion::IsInitialized() const {
  return true;
}

void HTTPVersion::InternalSwap(HTTPVersion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HTTPVersion, _impl_.minor_)
      + sizeof(HTTPVersion::_impl_.minor_)
      - PROTOBUF_FIELD_OFFSET(HTTPVersion, _impl_.major_)>(
          reinterpret_cast<char*>(&_impl_.major_),
          reinterpret_cast<char*>(&other->_impl_.major_));
}

::google::protobuf::Metadata HTTPVersion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_server_2fv1_2fserver_2eproto_getter, &descriptor_table_server_2fv1_2fserver_2eproto_once,
      file_level_metadata_server_2fv1_2fserver_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace server
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
