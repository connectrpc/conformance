version: "3.9"
services:
  server-connect:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/serverconnect --h1port "8080" --h2port "8081" --h3port "8082" --cert "cert/server-connect.crt" --key "cert/server-connect.key"
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
    healthcheck:
      test: [ "CMD", "/usr/local/bin/grpc-health-probe", "-addr=localhost:8081", "-service=grpc.testing.TestService", "-tls", "-tls-ca-cert=cert/CrosstestCA.crt", "-tls-server-name=server-connect"]
      interval: 1s
      timeout: 1s
      retries: 5
  server-grpc:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/servergrpc --port "8083" --cert "cert/server-grpc.crt" --key "cert/server-grpc.key"
    ports:
      - "8083:8083"
    healthcheck:
      test: [ "CMD", "/usr/local/bin/grpc-health-probe", "-addr=localhost:8083", "-service=grpc.testing.TestService", "-tls", "-tls-ca-cert=cert/CrosstestCA.crt", "-tls-server-name=server-grpc"]
      interval: 1s
      timeout: 1s
      retries: 5
  envoy:
    image: envoyproxy/envoy:v1.20-latest
    ports:
      - "9091:9091"
      - "9092:9092"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml:ro
      - ./cert:/cert/:ro
  client-connect-to-server-connect-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8080" --implementation="connect-h1" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-connect-to-server-connect-h2:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8081" --implementation="connect-h2" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-connect-to-server-connect-h3:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8082" --implementation="connect-h3" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-connect-grpc-to-server-connect-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8080" --implementation="connect-grpc-h1" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-connect-grpc-to-server-connect-h2:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8081" --implementation="connect-grpc-h2" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-connect-grpc-to-server-connect-h3:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8082" --implementation="connect-grpc-h3" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-connect-grpc-web-to-server-connect-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8080" --implementation="connect-grpc-web-h1" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-connect-grpc-web-to-server-connect-h2:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8081" --implementation="connect-grpc-web-h2" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-connect-grpc-web-to-server-connect-h3:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8082" --implementation="connect-grpc-web-h3" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-connect-grpc-to-server-grpc:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-grpc" --port="8083" --implementation="connect-grpc-h2" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-grpc:
        condition: service_healthy
  client-grpc-to-server-connect:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8081" --implementation="grpc-go" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-connect:
        condition: service_healthy
  client-grpc-to-server-grpc:
    build:
      context: .
      dockerfile: Dockerfile.crosstest
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-grpc" --port="8083" --implementation="grpc-go" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      server-grpc:
        condition: service_healthy
  client-web-connect-web-to-server-connect-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="server-connect" --port="8080" --implementation="connect-web"
    depends_on:
      server-connect:
        condition: service_healthy
  client-web-connect-grpc-web-to-server-connect-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="server-connect" --port="8080" --implementation="connect-grpc-web"
    depends_on:
      server-connect:
        condition: service_healthy
  client-web-connect-grpc-web-to-envoy-server-connect:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="envoy" --port="9091" --implementation="connect-grpc-web"
    depends_on:
      envoy:
        condition: service_started
      server-connect:
        condition: service_healthy
  client-web-connect-grpc-web-to-envoy-server-grpc:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="envoy" --port="9092" --implementation="connect-grpc-web"
    depends_on:
      envoy:
        condition: service_started
      server-grpc:
        condition: service_healthy
  client-web-grpc-web-to-server-connect-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="server-connect" --port="8080" --implementation="grpc-web"
    depends_on:
      server-connect:
        condition: service_healthy
  client-web-grpc-web-to-envoy-server-connect:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="envoy" --port="9091" --implementation="grpc-web"
    depends_on:
      envoy:
        condition: service_started
      server-connect:
        condition: service_healthy
  client-web-grpc-web-to-envoy-server-grpc:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="envoy" --port="9092" --implementation="grpc-web"
    depends_on:
      envoy:
        condition: service_started
      server-grpc:
        condition: service_healthy
