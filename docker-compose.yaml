version: "3.9"
services:
  server-connect:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/serverconnect --h1port "8080" --h2port "8081" --h3port "8082" --cert "cert/server-connect.crt" --key "cert/server-connect.key"
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
  server-grpc:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/servergrpc --port "8083" --cert "cert/server-grpc.crt" --key "cert/server-grpc.key"
    ports:
      - "8083:8083"
  server-connect-node-fastify:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: node --loader ts-node/esm server/fastify/program.ts start --h1port=8084 --h2port=8085 --insecure
    ports:
      - "8084:8084"
      - "8085:8085"
  envoy:
    image: envoyproxy/envoy:v1.20-latest
    ports:
      - "9091:9091"
      - "9092:9092"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml:ro
      - ./cert:/cert/:ro
    depends_on:
      - server-connect
      - server-grpc
  client-connect-go-to-server-connect-go-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8080" --implementation="connect-h1" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-connect
  client-connect-go-to-server-connect-go-h2:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8081" --implementation="connect-h2" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-connect
  client-connect-go-to-server-connect-go-h3:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8082" --implementation="connect-h3" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-connect
  client-connect-go-to-server-connect-node-fastify-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    command: >
        /bin/sh -c "
        echo Waiting for Fastify to start...;
        while ! nc -z server-connect-node-fastify 8084;
        do
          sleep 1;
        done;
        /usr/local/bin/client --host='server-connect-node-fastify' --port='8084' --implementation='connect-h1' --insecure
        "
    depends_on:
      - server-connect-node-fastify
  client-connect-go-to-server-connect-node-fastify-h2:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    command: >
        /bin/sh -c "
        echo Waiting for Fastify to start...;
        while ! nc -z server-connect-node-fastify 8085;
        do
          sleep 1;
        done;
        /usr/local/bin/client --host='server-connect-node-fastify' --port='8085' --implementation='connect-h2' --insecure
        "
    depends_on:
      - server-connect-node-fastify
  client-connect-go-grpc-to-server-connect-node-fastify-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    command: >
        /bin/sh -c "
        echo Waiting for Fastify to start...;
        while ! nc -z server-connect-node-fastify 8084;
        do
          sleep 1;
        done;
        /usr/local/bin/client --host='server-connect-node-fastify' --port='8084' --implementation='connect-grpc-h1' --insecure
        "
    depends_on:
      - server-connect-node-fastify
  client-connect-go-grpc-to-server-connect-node-fastify-h2:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    command: >
        /bin/sh -c "
        echo Waiting for Fastify to start...;
        while ! nc -z server-connect-node-fastify 8085;
        do
          sleep 1;
        done;
        /usr/local/bin/client --host='server-connect-node-fastify' --port='8085' --implementation='connect-grpc-h2' --insecure
        "
    depends_on:
      - server-connect-node-fastify
  client-connect-go-grpc-web-to-server-connect-node-fastify-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    command: >
        /bin/sh -c "
        echo Waiting for Fastify to start...;
        while ! nc -z server-connect-node-fastify 8084;
        do
          sleep 1;
        done;
        /usr/local/bin/client --host='server-connect-node-fastify' --port='8084' --implementation='connect-grpc-web-h1' --insecure
        "
    depends_on:
      - server-connect-node-fastify
  client-connect-go-grpc-web-to-server-connect-node-fastify-h2:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    command: >
        /bin/sh -c "
        echo Waiting for Fastify to start...;
        while ! nc -z server-connect-node-fastify 8085;
        do
          sleep 1;
        done;
        /usr/local/bin/client --host='server-connect-node-fastify' --port='8085' --implementation='connect-grpc-web-h2' --insecure
        "
    depends_on:
      - server-connect-node-fastify
  client-grpc-go-to-server-connect-node-fastify:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    command: >
        /bin/sh -c "
        echo Waiting for Fastify to start...;
        while ! nc -z server-connect-node-fastify 8085;
        do
          sleep 1;
        done;
        /usr/local/bin/client --host='server-connect-node-fastify' --port='8085' --implementation='grpc-go' --insecure
        "
    depends_on:
      - server-connect-node-fastify
  client-connect-go-grpc-to-server-connect-go-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8080" --implementation="connect-grpc-h1" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-connect
  client-connect-go-grpc-to-server-connect-go-h2:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8081" --implementation="connect-grpc-h2" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-connect
  client-connect-go-grpc-web-to-server-connect-go-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8080" --implementation="connect-grpc-web-h1" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-connect
  client-connect-go-grpc-web-to-server-connect-go-h2:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8081" --implementation="connect-grpc-web-h2" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-connect
  client-connect-go-grpc-web-to-server-connect-go-h3:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8082" --implementation="connect-grpc-web-h3" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-connect
  client-connect-go-grpc-web-to-envoy-server-connect-go-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="envoy" --port="9091" --implementation="connect-grpc-web-h1" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - envoy
  client-connect-go-grpc-web-to-envoy-server-grpc-go-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="envoy" --port="9092" --implementation="connect-grpc-web-h1" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - envoy
  client-connect-go-grpc-to-server-grpc-go:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-grpc" --port="8083" --implementation="connect-grpc-h2" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-grpc
  client-grpc-go-to-server-connect-go:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-connect" --port="8081" --implementation="grpc-go" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-connect
  client-grpc-go-to-server-grpc-go:
    build:
      context: .
      dockerfile: Dockerfile.crosstestgo
      args:
        TEST_CONNECT_GO_BRANCH: "${TEST_CONNECT_GO_BRANCH:-}"
    entrypoint: /usr/local/bin/client --host="server-grpc" --port="8083" --implementation="grpc-go" --cert "cert/client.crt" --key "cert/client.key"
    depends_on:
      - server-grpc
  client-connect-web-to-server-connect-go-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="server-connect" --port="8080" --implementation="connect-web"
    depends_on:
      - server-connect
  client-connect-web-grpc-to-server-connect-go-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="server-connect" --port="8080" --implementation="connect-grpc-web"
    depends_on:
      - server-connect
  client-connect-web-grpc-to-envoy-server-connect-go:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="envoy" --port="9091" --implementation="connect-grpc-web"
    depends_on:
      - envoy
  client-connect-web-grpc-web-to-envoy-server-grpc-go:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="envoy" --port="9092" --implementation="connect-grpc-web"
    depends_on:
      - envoy
  client-connect-web-grpc-web-to-server-connect-go-h1:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="server-connect" --port="8080" --implementation="grpc-web"
    depends_on:
      - server-connect
  client-connect-web-grpc-web-to-envoy-server-connect-go:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="envoy" --port="9091" --implementation="grpc-web"
    depends_on:
      - envoy
  client-connect-web-grpc-web-to-envoy-server-grpc-go:
    build:
      context: .
      dockerfile: Dockerfile.crosstestweb
      args:
        TEST_PROTOBUF_ES_BRANCH: "${TEST_PROTOBUF_ES_BRANCH:-}"
        TEST_CONNECT_WEB_BRANCH: "${TEST_CONNECT_WEB_BRANCH:-}"
    entrypoint: npm run test -- --docker --host="envoy" --port="9092" --implementation="grpc-web"
    depends_on:
      - envoy
