name: gRPC-Web Compressed Trailers
mode: TEST_MODE_CLIENT
relevantProtocols:
  - PROTOCOL_GRPC_WEB
relevantCompressions:
  # Ideally, we'd run this sort of test for any/all compression encodings
  # supported by the client. But, since it uses a raw HTTP response, we
  # have to hard-code the compression (raw response config doesn't allow
  # parameterizing the encoding). So we test with the most likely encoding
  # to be implemented.
  - COMPRESSION_GZIP
relevantCodecs:
  - CODEC_PROTO
testCases:
  - request:
      testName: trailers-in-body/compressed
      streamType: STREAM_TYPE_UNARY
      requestMessages:
        - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
          responseDefinition:
            rawResponse:
              status_code: 200
              headers:
                - name: "access-control-allow-origin"
                  value: [ "*" ]
                - name: "access-control-expose-headers"
                  value: [ "*" ]
                - name: content-type
                  value: [ "application/grpc-web" ]
                - name: grpc-encoding
                  value: [ "gzip" ]
                - name: x-custom-header
                  value: [ "foo" ]
              stream:
                items:
                  - flags: 129
                    payload:
                      text: "grpc-status: 9\r\ngrpc-message: error\r\nx-custom-trailer: bing\r\n"
                      compression: COMPRESSION_GZIP
    expectedResponse:
      responseHeaders:
        - name: x-custom-header
          value: [ "foo" ]
      error:
        code: 9
        message: error
      responseTrailers:
        - name: x-custom-trailer
          value: [ "bing" ]