name: Server Message Size
mode: TEST_MODE_SERVER
reliesOnMessageReceiveLimit: true
relevantCodecs:
  - CODEC_PROTO
testCases:
# Unary Tests -----------------------------------------------------------------
- request:
    testName: unary/request-equal-to-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        responseData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 0
- request:
    testName: unary/request-exceeds-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        responseData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 10
  # Override
  expectedResponse:
    error:
      code: 8
# Client Stream Tests ---------------------------------------------------------
- request:
    testName: client-stream/all-requests-equal-to-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: ClientStream
    streamType: STREAM_TYPE_CLIENT_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ClientStreamRequest
      responseDefinition:
        responseData: "dGVzdCByZXNwb25zZQ=="
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ClientStreamRequest
      requestData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 0
    - sizeRelativeToLimit: 0
- request:
    testName: client-stream/first-request-exceeds-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: ClientStream
    streamType: STREAM_TYPE_CLIENT_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ClientStreamRequest
      responseDefinition:
        responseData: "dGVzdCByZXNwb25zZQ=="
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ClientStreamRequest
      requestData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 10
    - sizeRelativeToLimit: 0
  # Override
  expectedResponse:
    error:
      code: 8
- request:
    testName: client-stream/subsequent-request-exceeds-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: ClientStream
    streamType: STREAM_TYPE_CLIENT_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ClientStreamRequest
      responseDefinition:
        responseData: "dGVzdCByZXNwb25zZQ=="
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ClientStreamRequest
      requestData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 0
    - sizeRelativeToLimit: 10
  # Override
  expectedResponse:
    error:
      code: 8
# Server Stream Tests ---------------------------------------------------------
- request:
    testName: server-stream/request-equal-to-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 0
- request:
    testName: server-stream/request-exceeds-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 10
  # Override
  expectedResponse:
    error:
      code: 8
# Bidi Stream Tests -----------------------------------------------------------
- request:
    testName: bidi-stream/half-duplex/all-requests-equal-to-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: BidiStream
    streamType: STREAM_TYPE_HALF_DUPLEX_BIDI_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      responseDefinition:
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      requestData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 0
    - sizeRelativeToLimit: 0
- request:
    testName: bidi-stream/half-duplex/first-request-exceeds-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: BidiStream
    streamType: STREAM_TYPE_HALF_DUPLEX_BIDI_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      responseDefinition:
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      requestData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 10
    - sizeRelativeToLimit: 0
  # With half duplex, we should only receive an error because it processes
  # all requests before responding and since a request is too large, it never
  # responds with any payloads
  expectedResponse:
    error:
      code: 8
- request:
    testName: bidi-stream/half-duplex/subsequent-request-exceeds-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: BidiStream
    streamType: STREAM_TYPE_HALF_DUPLEX_BIDI_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      responseDefinition:
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      requestData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 0
    - sizeRelativeToLimit: 10
  # With half duplex, we should only receive an error because it processes
  # all requests before responding and since a request is too large, it never
  # responds with any payloads
  expectedResponse:
    error:
      code: 8
- request:
    testName: bidi-stream/full-duplex/all-requests-equal-to-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: BidiStream
    streamType: STREAM_TYPE_FULL_DUPLEX_BIDI_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      responseDefinition:
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
      fullDuplex: true
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      requestData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 0
    - sizeRelativeToLimit: 0
- request:
    testName: bidi-stream/full-duplex/first-request-exceeds-server-limit
    service: connectrpc.conformance.v1.ConformanceService
    method: BidiStream
    streamType: STREAM_TYPE_FULL_DUPLEX_BIDI_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      responseDefinition:
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
      fullDuplex: true
    - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
      requestData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 10
    - sizeRelativeToLimit: 0
  # We should only receive an error because our first request
  # was too large and the entire RPC immediately fails.
  expectedResponse:
    error:
      code: 8
# TODO - Need a way to populate the expected response payload because the test
# library padded it with size and we don't know what it looks like here.
# - request:
#     testName: bidi-stream/full-duplex/subsequent-request-exceeds-server-limit
#     service: connectrpc.conformance.v1.ConformanceService
#     method: BidiStream
#     streamType: STREAM_TYPE_FULL_DUPLEX_BIDI_STREAM
#     requestMessages:
#     - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
#       responseDefinition:
#         responseData:
#           - "dGVzdCByZXNwb25zZQ=="
#           - "dGVzdCByZXNwb25zZQ=="
#       fullDuplex: true
#     - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
#       requestData: "dGVzdCByZXNwb25zZQ=="
#   expandRequests:
#     - sizeRelativeToLimit: 0
#     - sizeRelativeToLimit: 10
#   # Since this is full duplex, we should receive one request and then an error
#   # because our second request was too large and the first one was already responded to.
#   expectedResponse:
#     payloads:
#       - data: "dGVzdCByZXNwb25zZQ=="
#         requestInfo:
#           requests:
#             - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
#               responseDefinition:
#                 responseData:
#                   - "dGVzdCByZXNwb25zZQ=="
#                   - "dGVzdCByZXNwb25zZQ=="
#             - "@type": type.googleapis.com/connectrpc.conformance.v1.BidiStreamRequest
#               requestData: "dGVzdCByZXNwb25zZQ=="
#     error:
#       code: 8
