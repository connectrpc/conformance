name: gRPC-web
relevantHttpVersions:
  - HTTP_VERSION_1
relevantCodecs:
  - CODEC_PROTO
relevantProtocols:
  - PROTOCOL_GRPC_WEB
relevantCompressions:
  - COMPRESSION_IDENTITY
reliesOnMessageReceiveLimit: true
mode: TEST_MODE_CLIENT
# TODO - This file is an amalgam of all the tests for unary and server streams that
# exist in the other test files with the exception of cancellation.yaml.
# We cannot sufficiently test server stream cancellations because that requires
# mode=grpcwebtext and Connect servers do not support that. However, Connect via
# gRPC-web _does_ support that, so we need a way to exclude the cancellation tests
# from the gRPC-web client run but still include them for Connect via gRPC-web.
testCases:
# Unary Tests -----------------------------------------------------------------
- request:
    testName: unary success
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestHeaders:
    - name: X-Conformance-Test
      value: ["Value1", "Value2"]
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        responseHeaders:
        - name: x-custom-header
          value: ["foo","bar","baz"]
        responseData: "dGVzdCByZXNwb25zZQ=="
        responseTrailers:
        - name: x-custom-trailer
          # There is a bug in the gRPC-web client with handling duplicate trailer metadata for unary success responses.
          # This is because with a regular success response, the trailers are sent as actual trailers,
          # which parses the trailers using this code:
          # https://github.com/grpc/grpc-web/blob/83eec72cc3b6bb4c6d152ace7e246d98b808dd85/javascript/net/grpc/web/grpcwebclientreadablestream.js#L367
          # And since that uses an object keyed to trailer name, it will eliminate dupes.
          # The error responses correctly return duplicate trailer metadata because with errors, the trailers are
          # sent as response headers from the server and these headers are not run through the parseHttp1Headers
          # function linked above. They are instead just set directly onto the returned error's metadata as
          # returned from the server.
          value: ["bing"]
- request:
    testName: unary empty definition
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
- request:
    testName: unary no definition
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
- request:
    testName: unary canceled error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 1
          message: "canceled"
- request:
    testName: unary unknown error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 2
          message: "unknown"
- request:
    testName: unary invalid argument error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 3
          message: "invalid argument"
- request:
    testName: unary deadline exceeded error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 4
          message: "deadline exceeded"
- request:
    testName: unary not found error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 5
          message: "not found"
- request:
    testName: unary already exists error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 6
          message: "already exists"
- request:
    testName: unary permission denied error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 7
          message: "permission denied"
- request:
    testName: unary resource exhausted error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 8
          message: "resource exhausted"
- request:
    testName: unary failed precondition error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 9
          message: "failed precondition"
- request:
    testName: unary aborted error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 10
          message: "aborted"
- request:
    testName: unary out of range error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 11
          message: "out of range"
- request:
    testName: unary unimplemented error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 12
          message: "unimplemented"
- request:
    testName: unary internal error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 13
          message: "internal"
- request:
    testName: unary unavailable error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 14
          message: "unavailable"
- request:
    testName: unary data loss error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 15
          message: "data loss"
- request:
    testName: unary unauthenticated error
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 16
          message: "unauthenticated"
- request:
    testName: unary error sends headers and trailers
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestHeaders:
    - name: X-Conformance-Test
      value: ["Value1","Value2"]
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        responseHeaders:
        - name: x-custom-header
          value: ["foo","bar","baz"]
        error:
          code: 13
          message: "unary failed"
        responseTrailers:
        - name: x-custom-trailer
          value: ["bing","quux"]
- request:
    testName: unary error unicode
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        error:
          code: 13
          message: "\ntest with whitespace\r\nand Unicode BMP â˜º and non-BMP ðŸ˜ˆ\n"
- request:
    testName: unary timeout
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    timeoutMs: 200
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        responseData: "dGVzdCByZXNwb25zZQ=="
        # We need to set a delay here of at least one second or more to accommodate
        # logic in grpc-web which sets the timeout on the XHR request to be either
        # 1s or 110% of the timeout value (whichever is greater).
        # See https://github.com/grpc/grpc-web/blob/83eec72cc3b6bb4c6d152ace7e246d98b808dd85/javascript/net/grpc/web/grpcwebclientbase.js#L335-L342
        # for more context.
        responseDelayMs: 1500
  # Override
  expectedResponse:
    error:
      code: 4
- request:
    testName: unary request equal to client limit
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        responseData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 0
- request:
    testName: unary request exceeds client limit
    service: connectrpc.conformance.v1.ConformanceService
    method: Unary
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnaryRequest
      responseDefinition:
        responseData: "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 10
  # Override
  expectedResponse:
    error:
      code: 8
# Server Stream Tests ---------------------------------------------------------
- request:
    testName: server stream success
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestHeaders:
    - name: X-Conformance-Test
      value: ["Value1","Value2"]
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        responseHeaders:
        - name: x-custom-header
          value: ["foo","bar","baz"]
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
        responseTrailers:
        - name: x-custom-trailer
          # There is a bug in the gRPC-web client with handling duplicate trailer metadata for all server streaming responses.
          # This is because trailers are sent as actual trailers and which the client parses trailers using this code:
          # https://github.com/grpc/grpc-web/blob/83eec72cc3b6bb4c6d152ace7e246d98b808dd85/javascript/net/grpc/web/grpcwebclientreadablestream.js#L367
          # And since that uses an object keyed to trailer name, it will eliminate dupes.
          value: ["bing"]
- request:
    testName: server stream no response
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        responseHeaders:
        - name: x-custom-header
          value: ["foo","bar","baz"]
        responseTrailers:
        - name: x-custom-trailer
          value: ["bing"]
- request:
    testName: server stream no definition
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
- request:
    testName: stream canceled error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 1
          message: "canceled"
- request:
    testName: stream unknown error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 2
          message: "unknown"
- request:
    testName: stream invalid argument error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 3
          message: "invalid argument"
- request:
    testName: stream deadline exceeded error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 4
          message: "deadline exceeded"
- request:
    testName: stream not found error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 5
          message: "not found"
- request:
    testName: stream already exists error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 6
          message: "already exists"
- request:
    testName: stream permission denied error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 7
          message: "permission denied"
- request:
    testName: stream resource exhausted error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 8
          message: "resource exhausted"
- request:
    testName: stream failed precondition error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 9
          message: "failed precondition"
- request:
    testName: stream aborted error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 10
          message: "aborted"
- request:
    testName: stream out of range error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 11
          message: "out of range"
- request:
    testName: stream unimplemented error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 12
          message: "unimplemented"
- request:
    testName: stream internal error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 13
          message: "internal"
- request:
    testName: stream unavailable error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 14
          message: "unavailable"
- request:
    testName: stream data loss error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 15
          message: "data loss"
- request:
    testName: stream unauthenticated error
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        error:
          code: 16
          message: "unauthenticated"
- request:
    testName: server stream error with responses
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestHeaders:
    - name: X-Conformance-Test
      value: ["Value1","Value2"]
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        responseHeaders:
        - name: x-custom-header
          value: ["foo","bar","baz"]
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
        error:
          code: 13
          message: "server stream failed"
        responseTrailers:
        - name: x-custom-trailer
          # There is a bug in the gRPC-web client with handling duplicate trailer metadata for all server streaming responses.
          # This is because trailers are sent as actual trailers and which the client parses trailers using this code:
          # https://github.com/grpc/grpc-web/blob/83eec72cc3b6bb4c6d152ace7e246d98b808dd85/javascript/net/grpc/web/grpcwebclientreadablestream.js#L367
          # And since that uses an object keyed to trailer name, it will eliminate dupes.
          value: ["bing"]
- request:
    testName: server stream error with no responses
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestHeaders:
    - name: X-Conformance-Test
      value: ["Value1","Value2"]
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        responseHeaders:
        - name: x-custom-header
          value: ["foo","bar","baz"]
        error:
          code: 13
          message: "server stream failed"
        responseTrailers:
        - name: x-custom-trailer
          # There is a bug in the gRPC-web client with handling duplicate trailer metadata for all server streaming responses.
          # This is because trailers are sent as actual trailers and which the client parses trailers using this code:
          # https://github.com/grpc/grpc-web/blob/83eec72cc3b6bb4c6d152ace7e246d98b808dd85/javascript/net/grpc/web/grpcwebclientreadablestream.js#L367
          # And since that uses an object keyed to trailer name, it will eliminate dupes.
          value: ["bing"]
- request:
    testName: server stream timeout
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    timeoutMs: 200
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        # We need to set a delay here of at least one second or more to accommodate
        # logic in grpc-web which sets the timeout on the XHR request to be either
        # 1s or 110% of the timeout value (whichever is greater).
        # See https://github.com/grpc/grpc-web/blob/83eec72cc3b6bb4c6d152ace7e246d98b808dd85/javascript/net/grpc/web/grpcwebclientbase.js#L335-L342
        # for more context.
        responseDelayMs: 1500
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
  # Override
  expectedResponse:
    error:
      code: 4
- request:
    testName: server stream request equal to client limit
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 0
- request:
    testName: server stream request exceeds client limit
    service: connectrpc.conformance.v1.ConformanceService
    method: ServerStream
    streamType: STREAM_TYPE_SERVER_STREAM
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.ServerStreamRequest
      responseDefinition:
        responseData:
          - "dGVzdCByZXNwb25zZQ=="
          - "dGVzdCByZXNwb25zZQ=="
  expandRequests:
    - sizeRelativeToLimit: 10
  # Override
  expectedResponse:
    error:
      code: 8
# Misc Tests ------------------------------------------------------------------
- request:
    testName: unimplemented
    service: connectrpc.conformance.v1.ConformanceService
    method: Unimplemented
    streamType: STREAM_TYPE_UNARY
    requestMessages:
    - "@type": type.googleapis.com/connectrpc.conformance.v1.UnimplementedRequest
  # Override
  expectedResponse:
    error:
      code: 12
