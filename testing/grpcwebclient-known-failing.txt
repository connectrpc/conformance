# The gRPC-web client only supports true server streaming when using mode=grpcwebtext, which Connect doesn't
# support. Server streaming is still possible but all responses are buffered and delivered at the same time so
# we can't test cancellations after responses. In addition, even cancelling before receiving responses doesn't
# throw any sort of error, so we can't correctly verify a stream was canceled.
Client Cancellation/**/server-stream/**/cancel-after-responses
Client Cancellation/**/server-stream/**/cancel-after-zero-responses

# There is a bug in the gRPC-web client with handling duplicate trailer metadata for responses where trailers
# are encoded in the body, which are parsed using this code:
#   https://github.com/grpc/grpc-web/blob/83eec72cc3b6bb4c6d152ace7e246d98b808dd85/javascript/net/grpc/web/grpcwebclientreadablestream.js#L367
# And since that uses an object keyed to trailer name, it will eliminate dupes. Responses that use a
# "trailers only" response can succeed, however, because those trailers are actually encoded as HTTP
# headers, which are not parsed with the above code.
Duplicate Metadata/**/unary/**/success
Duplicate Metadata/**/server-stream/**
gRPC-Web Trailers/**/trailers-in-body/duplicate-metadata
gRPC-Web Trailers/**/trailers-in-body/mixed-case

# The gRPC-Web client also does not use the expected error codes for some error situations.
# It appears to use "unknown" for nearly (which likely means it's just not classifying them
# at all, which is certainly a bug).
gRPC-Web Unexpected Responses/**/unexpected-codec
gRPC-Web Unexpected Responses/**/unexpected-compressed-message
gRPC-Web Unexpected Responses/**/unexpected-compression
