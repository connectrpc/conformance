/**
 * @fileoverview gRPC-Web generated client stub for connect.conformance
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v0.0.0
// source: connect/conformance/test.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as connect_conformance_messages_pb from '../../connect/conformance/messages_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class TestServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorEmptyCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.TestService/EmptyCall',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  emptyCall(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  emptyCall(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  emptyCall(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.TestService/EmptyCall',
        request,
        metadata || {},
        this.methodDescriptorEmptyCall,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.TestService/EmptyCall',
    request,
    metadata || {},
    this.methodDescriptorEmptyCall);
  }

  methodDescriptorUnaryCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.TestService/UnaryCall',
    grpcWeb.MethodType.UNARY,
    connect_conformance_messages_pb.SimpleRequest,
    connect_conformance_messages_pb.SimpleResponse,
    (request: connect_conformance_messages_pb.SimpleRequest) => {
      return request.serializeBinary();
    },
    connect_conformance_messages_pb.SimpleResponse.deserializeBinary
  );

  unaryCall(
    request: connect_conformance_messages_pb.SimpleRequest,
    metadata: grpcWeb.Metadata | null): Promise<connect_conformance_messages_pb.SimpleResponse>;

  unaryCall(
    request: connect_conformance_messages_pb.SimpleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.SimpleResponse) => void): grpcWeb.ClientReadableStream<connect_conformance_messages_pb.SimpleResponse>;

  unaryCall(
    request: connect_conformance_messages_pb.SimpleRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.SimpleResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.TestService/UnaryCall',
        request,
        metadata || {},
        this.methodDescriptorUnaryCall,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.TestService/UnaryCall',
    request,
    metadata || {},
    this.methodDescriptorUnaryCall);
  }

  methodDescriptorFailUnaryCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.TestService/FailUnaryCall',
    grpcWeb.MethodType.UNARY,
    connect_conformance_messages_pb.SimpleRequest,
    connect_conformance_messages_pb.SimpleResponse,
    (request: connect_conformance_messages_pb.SimpleRequest) => {
      return request.serializeBinary();
    },
    connect_conformance_messages_pb.SimpleResponse.deserializeBinary
  );

  failUnaryCall(
    request: connect_conformance_messages_pb.SimpleRequest,
    metadata: grpcWeb.Metadata | null): Promise<connect_conformance_messages_pb.SimpleResponse>;

  failUnaryCall(
    request: connect_conformance_messages_pb.SimpleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.SimpleResponse) => void): grpcWeb.ClientReadableStream<connect_conformance_messages_pb.SimpleResponse>;

  failUnaryCall(
    request: connect_conformance_messages_pb.SimpleRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.SimpleResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.TestService/FailUnaryCall',
        request,
        metadata || {},
        this.methodDescriptorFailUnaryCall,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.TestService/FailUnaryCall',
    request,
    metadata || {},
    this.methodDescriptorFailUnaryCall);
  }

  methodDescriptorCacheableUnaryCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.TestService/CacheableUnaryCall',
    grpcWeb.MethodType.UNARY,
    connect_conformance_messages_pb.SimpleRequest,
    connect_conformance_messages_pb.SimpleResponse,
    (request: connect_conformance_messages_pb.SimpleRequest) => {
      return request.serializeBinary();
    },
    connect_conformance_messages_pb.SimpleResponse.deserializeBinary
  );

  cacheableUnaryCall(
    request: connect_conformance_messages_pb.SimpleRequest,
    metadata: grpcWeb.Metadata | null): Promise<connect_conformance_messages_pb.SimpleResponse>;

  cacheableUnaryCall(
    request: connect_conformance_messages_pb.SimpleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.SimpleResponse) => void): grpcWeb.ClientReadableStream<connect_conformance_messages_pb.SimpleResponse>;

  cacheableUnaryCall(
    request: connect_conformance_messages_pb.SimpleRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.SimpleResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.TestService/CacheableUnaryCall',
        request,
        metadata || {},
        this.methodDescriptorCacheableUnaryCall,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.TestService/CacheableUnaryCall',
    request,
    metadata || {},
    this.methodDescriptorCacheableUnaryCall);
  }

  methodDescriptorStreamingOutputCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.TestService/StreamingOutputCall',
    grpcWeb.MethodType.SERVER_STREAMING,
    connect_conformance_messages_pb.StreamingOutputCallRequest,
    connect_conformance_messages_pb.StreamingOutputCallResponse,
    (request: connect_conformance_messages_pb.StreamingOutputCallRequest) => {
      return request.serializeBinary();
    },
    connect_conformance_messages_pb.StreamingOutputCallResponse.deserializeBinary
  );

  streamingOutputCall(
    request: connect_conformance_messages_pb.StreamingOutputCallRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<connect_conformance_messages_pb.StreamingOutputCallResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/connect.conformance.TestService/StreamingOutputCall',
      request,
      metadata || {},
      this.methodDescriptorStreamingOutputCall);
  }

  methodDescriptorFailStreamingOutputCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.TestService/FailStreamingOutputCall',
    grpcWeb.MethodType.SERVER_STREAMING,
    connect_conformance_messages_pb.StreamingOutputCallRequest,
    connect_conformance_messages_pb.StreamingOutputCallResponse,
    (request: connect_conformance_messages_pb.StreamingOutputCallRequest) => {
      return request.serializeBinary();
    },
    connect_conformance_messages_pb.StreamingOutputCallResponse.deserializeBinary
  );

  failStreamingOutputCall(
    request: connect_conformance_messages_pb.StreamingOutputCallRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<connect_conformance_messages_pb.StreamingOutputCallResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/connect.conformance.TestService/FailStreamingOutputCall',
      request,
      metadata || {},
      this.methodDescriptorFailStreamingOutputCall);
  }

  methodDescriptorUnimplementedCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.TestService/UnimplementedCall',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unimplementedCall(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unimplementedCall(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unimplementedCall(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.TestService/UnimplementedCall',
        request,
        metadata || {},
        this.methodDescriptorUnimplementedCall,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.TestService/UnimplementedCall',
    request,
    metadata || {},
    this.methodDescriptorUnimplementedCall);
  }

  methodDescriptorUnimplementedStreamingOutputCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.TestService/UnimplementedStreamingOutputCall',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unimplementedStreamingOutputCall(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/connect.conformance.TestService/UnimplementedStreamingOutputCall',
      request,
      metadata || {},
      this.methodDescriptorUnimplementedStreamingOutputCall);
  }

}

export class UnimplementedServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorUnimplementedCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.UnimplementedService/UnimplementedCall',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unimplementedCall(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  unimplementedCall(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  unimplementedCall(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.UnimplementedService/UnimplementedCall',
        request,
        metadata || {},
        this.methodDescriptorUnimplementedCall,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.UnimplementedService/UnimplementedCall',
    request,
    metadata || {},
    this.methodDescriptorUnimplementedCall);
  }

  methodDescriptorUnimplementedStreamingOutputCall = new grpcWeb.MethodDescriptor(
    '/connect.conformance.UnimplementedService/UnimplementedStreamingOutputCall',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  unimplementedStreamingOutputCall(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/connect.conformance.UnimplementedService/UnimplementedStreamingOutputCall',
      request,
      metadata || {},
      this.methodDescriptorUnimplementedStreamingOutputCall);
  }

}

export class ReconnectServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorStart = new grpcWeb.MethodDescriptor(
    '/connect.conformance.ReconnectService/Start',
    grpcWeb.MethodType.UNARY,
    connect_conformance_messages_pb.ReconnectParams,
    google_protobuf_empty_pb.Empty,
    (request: connect_conformance_messages_pb.ReconnectParams) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  start(
    request: connect_conformance_messages_pb.ReconnectParams,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  start(
    request: connect_conformance_messages_pb.ReconnectParams,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  start(
    request: connect_conformance_messages_pb.ReconnectParams,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.ReconnectService/Start',
        request,
        metadata || {},
        this.methodDescriptorStart,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.ReconnectService/Start',
    request,
    metadata || {},
    this.methodDescriptorStart);
  }

  methodDescriptorStop = new grpcWeb.MethodDescriptor(
    '/connect.conformance.ReconnectService/Stop',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    connect_conformance_messages_pb.ReconnectInfo,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    connect_conformance_messages_pb.ReconnectInfo.deserializeBinary
  );

  stop(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<connect_conformance_messages_pb.ReconnectInfo>;

  stop(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.ReconnectInfo) => void): grpcWeb.ClientReadableStream<connect_conformance_messages_pb.ReconnectInfo>;

  stop(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.ReconnectInfo) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.ReconnectService/Stop',
        request,
        metadata || {},
        this.methodDescriptorStop,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.ReconnectService/Stop',
    request,
    metadata || {},
    this.methodDescriptorStop);
  }

}

export class LoadBalancerStatsServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetClientStats = new grpcWeb.MethodDescriptor(
    '/connect.conformance.LoadBalancerStatsService/GetClientStats',
    grpcWeb.MethodType.UNARY,
    connect_conformance_messages_pb.LoadBalancerStatsRequest,
    connect_conformance_messages_pb.LoadBalancerStatsResponse,
    (request: connect_conformance_messages_pb.LoadBalancerStatsRequest) => {
      return request.serializeBinary();
    },
    connect_conformance_messages_pb.LoadBalancerStatsResponse.deserializeBinary
  );

  getClientStats(
    request: connect_conformance_messages_pb.LoadBalancerStatsRequest,
    metadata: grpcWeb.Metadata | null): Promise<connect_conformance_messages_pb.LoadBalancerStatsResponse>;

  getClientStats(
    request: connect_conformance_messages_pb.LoadBalancerStatsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.LoadBalancerStatsResponse) => void): grpcWeb.ClientReadableStream<connect_conformance_messages_pb.LoadBalancerStatsResponse>;

  getClientStats(
    request: connect_conformance_messages_pb.LoadBalancerStatsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.LoadBalancerStatsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.LoadBalancerStatsService/GetClientStats',
        request,
        metadata || {},
        this.methodDescriptorGetClientStats,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.LoadBalancerStatsService/GetClientStats',
    request,
    metadata || {},
    this.methodDescriptorGetClientStats);
  }

  methodDescriptorGetClientAccumulatedStats = new grpcWeb.MethodDescriptor(
    '/connect.conformance.LoadBalancerStatsService/GetClientAccumulatedStats',
    grpcWeb.MethodType.UNARY,
    connect_conformance_messages_pb.LoadBalancerAccumulatedStatsRequest,
    connect_conformance_messages_pb.LoadBalancerAccumulatedStatsResponse,
    (request: connect_conformance_messages_pb.LoadBalancerAccumulatedStatsRequest) => {
      return request.serializeBinary();
    },
    connect_conformance_messages_pb.LoadBalancerAccumulatedStatsResponse.deserializeBinary
  );

  getClientAccumulatedStats(
    request: connect_conformance_messages_pb.LoadBalancerAccumulatedStatsRequest,
    metadata: grpcWeb.Metadata | null): Promise<connect_conformance_messages_pb.LoadBalancerAccumulatedStatsResponse>;

  getClientAccumulatedStats(
    request: connect_conformance_messages_pb.LoadBalancerAccumulatedStatsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.LoadBalancerAccumulatedStatsResponse) => void): grpcWeb.ClientReadableStream<connect_conformance_messages_pb.LoadBalancerAccumulatedStatsResponse>;

  getClientAccumulatedStats(
    request: connect_conformance_messages_pb.LoadBalancerAccumulatedStatsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.LoadBalancerAccumulatedStatsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.LoadBalancerStatsService/GetClientAccumulatedStats',
        request,
        metadata || {},
        this.methodDescriptorGetClientAccumulatedStats,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.LoadBalancerStatsService/GetClientAccumulatedStats',
    request,
    metadata || {},
    this.methodDescriptorGetClientAccumulatedStats);
  }

}

export class XdsUpdateHealthServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorSetServing = new grpcWeb.MethodDescriptor(
    '/connect.conformance.XdsUpdateHealthService/SetServing',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  setServing(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  setServing(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  setServing(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.XdsUpdateHealthService/SetServing',
        request,
        metadata || {},
        this.methodDescriptorSetServing,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.XdsUpdateHealthService/SetServing',
    request,
    metadata || {},
    this.methodDescriptorSetServing);
  }

  methodDescriptorSetNotServing = new grpcWeb.MethodDescriptor(
    '/connect.conformance.XdsUpdateHealthService/SetNotServing',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  setNotServing(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  setNotServing(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  setNotServing(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.XdsUpdateHealthService/SetNotServing',
        request,
        metadata || {},
        this.methodDescriptorSetNotServing,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.XdsUpdateHealthService/SetNotServing',
    request,
    metadata || {},
    this.methodDescriptorSetNotServing);
  }

}

export class XdsUpdateClientConfigureServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorConfigure = new grpcWeb.MethodDescriptor(
    '/connect.conformance.XdsUpdateClientConfigureService/Configure',
    grpcWeb.MethodType.UNARY,
    connect_conformance_messages_pb.ClientConfigureRequest,
    connect_conformance_messages_pb.ClientConfigureResponse,
    (request: connect_conformance_messages_pb.ClientConfigureRequest) => {
      return request.serializeBinary();
    },
    connect_conformance_messages_pb.ClientConfigureResponse.deserializeBinary
  );

  configure(
    request: connect_conformance_messages_pb.ClientConfigureRequest,
    metadata: grpcWeb.Metadata | null): Promise<connect_conformance_messages_pb.ClientConfigureResponse>;

  configure(
    request: connect_conformance_messages_pb.ClientConfigureRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.ClientConfigureResponse) => void): grpcWeb.ClientReadableStream<connect_conformance_messages_pb.ClientConfigureResponse>;

  configure(
    request: connect_conformance_messages_pb.ClientConfigureRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: connect_conformance_messages_pb.ClientConfigureResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/connect.conformance.XdsUpdateClientConfigureService/Configure',
        request,
        metadata || {},
        this.methodDescriptorConfigure,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/connect.conformance.XdsUpdateClientConfigureService/Configure',
    request,
    metadata || {},
    this.methodDescriptorConfigure);
  }

}

